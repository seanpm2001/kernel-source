From 9da81d647c2c8d73d83cb0dbb180c01f195ddd31 Mon Sep 17 00:00:00 2001
From: Denis Kirjanov <denis.kirjanov@suse.com>
Date: Mon, 8 Jul 2024 17:14:24 +0300
Subject: [PATCH 1/3] netfilter: Implement reference counting for nft_sets
Patch-mainline: Never, upstream has replaced the fixed code
References: bsc#1215420 CVE-2023-4244

nft_sets are cleaned up during garbage collection, so implement
reference counting to avoid use-after-free.

Signed-off-by: Hannes Reinecke <hare@suse.de>
---
 include/net/netfilter/nf_tables.h |  2 ++
 net/netfilter/nf_tables_api.c     | 22 +++++++++++++++++++++-
 2 files changed, 23 insertions(+), 1 deletion(-)

diff --git a/include/net/netfilter/nf_tables.h b/include/net/netfilter/nf_tables.h
index 072c30a72751..ca43e4fcd9a1 100644
--- a/include/net/netfilter/nf_tables.h
+++ b/include/net/netfilter/nf_tables.h
@@ -393,6 +393,8 @@ struct nft_set {
 	u64				timeout;
 	u32				gc_int;
 	u16				policy;
+	/* alignment hole of 40 bytes due to alignemt */
+	struct kref			refs;
 	u16				udlen;
 	unsigned char			*udata;
 	/* runtime data below here */
diff --git a/net/netfilter/nf_tables_api.c b/net/netfilter/nf_tables_api.c
index da3521b58644..a75c94d31735 100644
--- a/net/netfilter/nf_tables_api.c
+++ b/net/netfilter/nf_tables_api.c
@@ -282,6 +282,23 @@ static int nft_delrule_by_chain(struct nft_ctx *ctx)
 	return 0;
 }
 
+ 
+static void __nft_set_put(struct kref *kref)
+{
+	struct nft_set *set = container_of(kref, struct nft_set, refs);
+	kfree(set);
+}
+
+int nft_set_get(struct nft_set *set)
+{
+	return kref_get_unless_zero(&set->refs);
+}
+
+void nft_set_put(struct nft_set *set)
+{
+	kref_put(&set->refs, __nft_set_put);
+}
+
 static int nft_trans_set_add(struct nft_ctx *ctx, int msg_type,
 			     struct nft_set *set)
 {
@@ -296,6 +313,8 @@ static int nft_trans_set_add(struct nft_ctx *ctx, int msg_type,
 			ntohl(nla_get_be32(ctx->nla[NFTA_SET_ID]));
 		nft_activate_next(ctx->net, set);
 	}
+	if (!nft_set_get(set))
+		return -EAGAIN;
 	nft_trans_set(trans) = set;
 	list_add_tail(&trans->list, &ctx->net->nft.commit_list);
 
@@ -3126,6 +3145,7 @@ static int nf_tables_newset(struct net *net, struct sock *nlsk,
 	set->udata  = udata;
 	set->timeout = timeout;
 	set->gc_int = gc_int;
+	kref_init(&set->refs);
 
 	err = ops->init(set, &desc, nla);
 	if (err < 0)
@@ -3152,7 +3172,7 @@ static void nft_set_destroy(struct nft_set *set)
 {
 	set->ops->destroy(set);
 	module_put(set->ops->owner);
-	kfree(set);
+	nft_set_put(set);
 }
 
 static void nf_tables_set_destroy(const struct nft_ctx *ctx, struct nft_set *set)
-- 
2.16.4

