From 51dbb601af08ef9c9b6abdcf9d9f7384fa32ddb4 Mon Sep 17 00:00:00 2001
From: Zhigang Luo <Zhigang.Luo@amd.com>
Date: Mon, 18 Mar 2024 14:13:10 -0400
Subject: amd/amdkfd: sync all devices to wait all processes being evicted
Git-commit: d06af584be5a769d124b7302b32a033e9559761d
Patch-mainline: v6.9-rc4
References: bsc#1225894 CVE-2024-36949

If there are more than one device doing reset in parallel, the first
device will call kfd_suspend_all_processes() to evict all processes
on all devices, this call takes time to finish. other device will
start reset and recover without waiting. if the process has not been
evicted before doing recover, it will be restored, then caused page
fault.

Signed-off-by: Zhigang Luo <Zhigang.Luo@amd.com>
Reviewed-by: Felix Kuehling <felix.kuehling@amd.com>
Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
Acked-by: Thomas Zimmermann <tzimmermann@suse.com>
---
 drivers/gpu/drm/amd/amdkfd/kfd_device.c | 18 ++++++------------
 1 file changed, 6 insertions(+), 12 deletions(-)

diff --git a/drivers/gpu/drm/amd/amdkfd/kfd_device.c b/drivers/gpu/drm/amd/amdkfd/kfd_device.c
index 5f25929c23b10..1a3d10fa19a65 100644
--- a/drivers/gpu/drm/amd/amdkfd/kfd_device.c
+++ b/drivers/gpu/drm/amd/amdkfd/kfd_device.c
@@ -602,18 +602,14 @@ bool kfd_is_locked(void)
 
 void kgd2kfd_suspend(struct kfd_dev *kfd)
 {
-	int count;
-
 	if (!kfd->init_complete)
 		return;
 
 	mutex_lock(&kfd_processes_mutex);
-	count = ++kfd_locked;
-	mutex_unlock(&kfd_processes_mutex);
-
 	/* For first KFD device suspend all the KFD processes */
-	if (count == 1)
+	if (++kfd_locked == 1)
 		kfd_suspend_all_processes();
+	mutex_unlock(&kfd_processes_mutex);
 
 	kfd->dqm->ops.stop(kfd->dqm);
 
@@ -622,7 +618,7 @@ void kgd2kfd_suspend(struct kfd_dev *kfd)
 
 int kgd2kfd_resume(struct kfd_dev *kfd)
 {
-	int ret, count;
+	int ret, i;
 
 	if (!kfd->init_complete)
 		return 0;
@@ -632,12 +628,10 @@ int kgd2kfd_resume(struct kfd_dev *kfd)
 		return ret;
 
 	mutex_lock(&kfd_processes_mutex);
-	count = --kfd_locked;
-	mutex_unlock(&kfd_processes_mutex);
-
-	WARN_ONCE(count < 0, "KFD suspend / resume ref. error");
-	if (count == 0)
+	if (--kfd_locked == 0)
 		ret = kfd_resume_all_processes();
+	WARN_ONCE(kfd_locked < 0, "KFD suspend / resume ref. error");
+	mutex_unlock(&kfd_processes_mutex);
 
 	return ret;
 }
-- 
2.45.2

