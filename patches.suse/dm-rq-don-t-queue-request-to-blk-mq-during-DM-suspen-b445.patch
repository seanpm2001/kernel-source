From b4459b11e84092658fa195a2587aff3b9637f0e7 Mon Sep 17 00:00:00 2001
From: Ming Lei <ming.lei@redhat.com>
Date: Thu, 23 Sep 2021 17:11:31 +0800
Subject: [PATCH] dm rq: don't queue request to blk-mq during DM suspend
Git-commit: b4459b11e84092658fa195a2587aff3b9637f0e7
Patch-mainline: v5.15-rc6
References: bsc#1225357, CVE-2021-47498

DM uses blk-mq's quiesce/unquiesce to stop/start device mapper queue.

But blk-mq's unquiesce may come from outside events, such as elevator
switch, updating nr_requests or others, and request may come during
suspend, so simply ask for blk-mq to requeue it.

Fixes one kernel panic issue when running updating nr_requests and
dm-mpath suspend/resume stress test.

(Coly Li: rebased for Linux 4.12 based SUSE kernel)

Cc: stable@vger.kernel.org
Signed-off-by: Ming Lei <ming.lei@redhat.com>
Signed-off-by: Mike Snitzer <snitzer@redhat.com>
Signed-off-by: Coly Li <colyli@suse.de>
---
 drivers/md/dm-rq.c |   12 ++++++++++++
 1 file changed, 12 insertions(+)

--- a/drivers/md/dm-rq.c
+++ b/drivers/md/dm-rq.c
@@ -17,6 +17,10 @@
 static unsigned dm_mq_nr_hw_queues = DM_MQ_NR_HW_QUEUES;
 static unsigned dm_mq_queue_depth = DM_MQ_QUEUE_DEPTH;
 
+#ifndef DMF_BLOCK_IO_FOR_SUSPEND
+#define DMF_BLOCK_IO_FOR_SUSPEND 0
+#endif
+
 /*
  * Request-based DM's mempools' reserved IOs set by the user.
  */
@@ -747,6 +751,14 @@ static blk_status_t dm_mq_queue_rq(struc
 	struct mapped_device *md = tio->md;
 	struct dm_target *ti = md->immutable_target;
 
+	/*
+	 * blk-mq's unquiesce may come from outside events, such as
+	 * elevator switch, updating nr_requests or others, and request may
+	 * come during suspend, so simply ask for blk-mq to requeue it.
+	 */
+	if (unlikely(test_bit(DMF_BLOCK_IO_FOR_SUSPEND, &md->flags)))
+		return BLK_STS_RESOURCE;
+
 	if (unlikely(!ti)) {
 		int srcu_idx;
 		struct dm_table *map = dm_get_live_table(md, &srcu_idx);
